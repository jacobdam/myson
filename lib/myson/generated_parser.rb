#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Myson
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     6,    20,    37,    32,    28,     7,    24,    36,     8,     6,
    17,    18,    19,    20,     7,    29,    32,     8,     6,    17,
    18,    19,    20,     7,    21,     9,     8,     6,    17,    18,
    19,    20,     7,    36,    20,     8,    33 ]

racc_action_check = [
     0,     8,    27,    23,     9,     0,     8,    26,     0,    32,
    32,    32,    32,    32,    32,    22,    31,    32,     7,     7,
     7,     7,     7,     7,     7,     1,     7,    37,    37,    37,
    37,    37,    37,    35,    36,    37,    25 ]

racc_action_pointer = [
    -2,    25,   nil,   nil,   nil,   nil,   nil,    16,    -5,     4,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     7,    -6,   nil,    25,    -2,   -10,   nil,   nil,
   nil,     7,     7,   nil,   nil,    24,    28,    25,   nil,   nil,
   nil,   nil,   nil ]

racc_action_default = [
   -32,   -32,    -1,    -2,    -3,    -4,   -12,   -32,   -32,   -32,
    -5,    -6,    -7,    -8,    -9,   -10,   -11,   -13,   -14,   -15,
   -16,   -17,   -32,   -19,   -24,   -32,   -26,   -32,    43,   -18,
   -20,   -21,   -32,   -25,   -27,   -29,   -32,   -32,   -22,   -23,
   -30,   -31,   -28 ]

racc_goto_table = [
    23,    26,    34,    27,    30,     5,     3,    22,     4,    25,
     2,    40,    38,     1,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    39,   nil,   nil,   nil,    41,
    42,    27 ]

racc_goto_check = [
     6,    15,    16,    10,    12,     5,     3,    11,     4,    14,
     2,    16,    12,     1,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,    15,
     6,    10 ]

racc_goto_pointer = [
   nil,    13,    10,     6,     8,     5,    -7,   nil,   nil,   nil,
    -5,     0,   -19,   nil,     1,    -7,   -24,   nil ]

racc_goto_default = [
   nil,   nil,   nil,    10,    11,    13,   nil,    12,    14,    15,
    16,   nil,   nil,    31,   nil,   nil,   nil,    35 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 14, :_reduce_none,
  1, 15, :_reduce_none,
  1, 15, :_reduce_none,
  1, 15, :_reduce_none,
  1, 19, :_reduce_none,
  1, 19, :_reduce_none,
  1, 19, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  1, 18, :_reduce_12,
  1, 21, :_reduce_13,
  1, 21, :_reduce_14,
  1, 22, :_reduce_none,
  1, 23, :_reduce_none,
  2, 17, :_reduce_17,
  3, 17, :_reduce_18,
  1, 24, :_reduce_19,
  2, 24, :_reduce_20,
  1, 25, :_reduce_21,
  2, 25, :_reduce_22,
  2, 26, :_reduce_23,
  2, 16, :_reduce_24,
  3, 16, :_reduce_25,
  1, 27, :_reduce_26,
  2, 27, :_reduce_27,
  3, 28, :_reduce_28,
  1, 29, :_reduce_29,
  2, 29, :_reduce_30,
  2, 30, :_reduce_31 ]

racc_reduce_n = 32

racc_shift_n = 43

racc_token_table = {
  false => 0,
  :error => 1,
  "null" => 2,
  "true" => 3,
  "false" => 4,
  :NUMBER => 5,
  :STRING => 6,
  "[" => 7,
  "]" => 8,
  "," => 9,
  "{" => 10,
  "}" => 11,
  ":" => 12 }

racc_nt_base = 13

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"null\"",
  "\"true\"",
  "\"false\"",
  "NUMBER",
  "STRING",
  "\"[\"",
  "\"]\"",
  "\",\"",
  "\"{\"",
  "\"}\"",
  "\":\"",
  "$start",
  "start",
  "document",
  "object",
  "array",
  "null",
  "literal",
  "primitive",
  "boolean",
  "number",
  "string",
  "array_items",
  "comma_array_items",
  "comma_array_item",
  "object_items",
  "object_item",
  "comma_object_items",
  "comma_object_item" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'myson.y', 10)
  def _reduce_12(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 11)
  def _reduce_13(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 12)
  def _reduce_14(val, _values, result)
     result = false 
    result
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'myson.y', 18)
  def _reduce_17(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 19)
  def _reduce_18(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 21)
  def _reduce_19(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 22)
  def _reduce_20(val, _values, result)
     result = [val[0]] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 24)
  def _reduce_21(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 25)
  def _reduce_22(val, _values, result)
     result = [val[0]] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 27)
  def _reduce_23(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 30)
  def _reduce_24(val, _values, result)
     result = {} 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 31)
  def _reduce_25(val, _values, result)
     result = Hash[val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 32)
  def _reduce_26(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 33)
  def _reduce_27(val, _values, result)
     result = [val[0]] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 35)
  def _reduce_28(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 36)
  def _reduce_29(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 37)
  def _reduce_30(val, _values, result)
     result = [val[0]] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'myson.y', 39)
  def _reduce_31(val, _values, result)
     result = val[1] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GeneratedParser
  end   # module Myson
